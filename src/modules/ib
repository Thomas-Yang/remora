#!/bin/s
#
#========================================================================
# HEADER
#========================================================================
#% DESCRIPTION
#% ib
#%
#% DO NOT call this script directly. This is called by REMORA
#%
#========================================================================
#- IMPLEMENTATION
#-      version     REMORA 1.5
#-      authors     Carlos Rosales (carlos@tacc.utexas.edu)
#-                  Antonio Gomez  (agomez@tacc.utexas.edu)
#-      license     MIT
#
#========================================================================
#  HISTORY
#       2015/12/08: Initial commit
#========================================================================

# All the functions take two arguments:
#  1.- The name of the node where this function is running
#  2.- The full path where the output will be stored/read
init_module_ib()
{
    if [ "$REMORA_SYMMETRIC" == "0" ]; then
        if [ "$REMORA_MODE" = "FULL" ]; then
            remora_ib_packets=`cat /sys/class/infiniband/mlx4_0/ports/1/counters/port_xmit_packets`
        fi
    fi
}

collect_data_ib()
{
    if [ "$REMORA_SYMMETRIC" == "0" ]; then
        if [ "$REMORA_MODE" = "FULL" ]; then
            local TIMESTAMP=`date +%s`
            local newpack=`cat /sys/class/infiniband/mlx4_0/ports/1/counters/port_xmit_packets`
            printf "%d %10d\n" $TIMESTAMP $((newpack-remora_ib_packets)) >> $2/ib_xmit_packets-$1.txt
            remora_ib_packets=$newpack
        fi
    fi
}
# This function might perform some processing on the data.
# If nothing needs to be done, it can be empty (but declared)
process_data_ib()
{
  :
}

store_data_db_ib()
{
    local jobid=$REMORA_JOB_ID
    local files=($2/ib_xmit_packets-*.txt)
    local prefix="$2/ib_xmit_packets-"
    for file in "${files[@]}"; do
        local node=${file#$prefix}
        node=${node%.txt}
        local idx=0
        while IFS='' read -r line || [[ -n "$line" ]]; do
            if [ $idx = 0 ]; then
                idx=1
                continue;
            fi  
            read timestamp packets <<< "$line"

            insert_ib_usage $jobid $timestamp $node $packets
        done < "$file"
    done
}

finalize_module_ib()
{
  :
}
